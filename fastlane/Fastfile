default_platform(:mac)

APP_BUILD_PATH = 'build'

platform :mac do
    desc "Do all the necessary things to prepare a new release"
    lane :release do
        build
        compress
        release_hash
        release_on_github
    end

    desc "Build and notarize the app"
    lane :build do
        build_mac_app(
            scheme: "ToolReleases",
            configuration: "Release",
            output_directory: "#{APP_BUILD_PATH}",
            clean: true,
            skip_package_pkg: true,
            export_method: "developer-id"
        )
        notarize(
            package: "#{APP_BUILD_PATH}/ToolReleases.app",
            print_log: true
        )
    end

    desc "Create zip file with the application and provides the necessary name format (which is used by the Sparkle framework)."
    lane :compress do
        version = get_version_number(target: "ToolReleases")
        build = get_build_number()
        zip(
            path: "#{APP_BUILD_PATH}/ToolReleases.app",
            output_path: "#{APP_BUILD_PATH}/ToolReleases_v#{version}.b#{build}.zip",
            symlinks: true
        )
    end

    desc "Return sha-256 hash from the application zip file. This is necessary for the Homebrew version."
    lane :release_hash do
        version = get_version_number(target: "ToolReleases")
        build = get_build_number()
        sh("cd .. && shasum -a 256 #{APP_BUILD_PATH}/ToolReleases_v#{version}.b#{build}.zip | awk '{print $1}'")
    end

    desc "Uploads the latest build to the GitHub Releases."
    lane :release_on_github do
        version = get_version_number(target: "ToolReleases")
        build = get_build_number()
        set_github_release(
            repository_name: "DeveloperMaris/ToolReleases",
            api_token: ENV["GITHUB_TOKEN"],
            name: "v#{version}",
            tag_name: "v#{version}",
            description: (File.read("CHANGELOG.md") rescue "No changelog provided"),
            commitish: "master",
            upload_assets: ["#{APP_BUILD_PATH}/ToolReleases_v#{version}.b#{build}.zip"]
        )
    end
end
